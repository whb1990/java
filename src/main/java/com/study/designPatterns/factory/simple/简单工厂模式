**什么是工厂模式？**

我们在创建对象时不会对客户端直接暴露创建逻辑，而是 通过使用一个共同的接口根据不同的条件来指向具体想要创建的对象。

**为什么要使用工厂模式？**

比如，我现在想要去英雄联盟商城购买英雄（去商场买衣服、去餐馆吃饭也是同样的道理），首先每个英雄要耗费的金币不一样，姑且我不管这个英雄是怎么设计的，只需交付不同的钱，购买不同的英雄即可。不同的钱，购买不同的英雄在代码层面上理解就是，在不同的条件下创建不同的实例对象。（注意：这个不同的条件是外部调用的）那么我现在只要交付具体的钱（也就是区分不同的条件）即可从商城（也就是工厂）获取我想要的英雄。

**工厂模式的优点？**

A：使用工厂模式的优点在于一个调用者想创建一个对象，只要知道其名称（也就是不同的标签）就可以在工厂获取具体的对象

B：扩展性强，如果想增加一个产品（也就是具体的对象），只要扩展工厂类就可以（也就是增加不同的标签，增加不同标签所对应的对象）。

C： 屏蔽产品的具体实现，调用者只关心产品的接口、无需关心内部实现。

**工厂模式的缺点？**

每次增加一个产品时，都需要增加一个具体类和对象实现工厂，使得系统中类的个数成倍增加，在一定程度上增加了系统的复杂度，同时也增加了系统具体类的依赖。这并不是什么好事。

**示例说明**

demoOne是以电脑生产为例；
demoTwo是以英雄联盟购买英雄为例；