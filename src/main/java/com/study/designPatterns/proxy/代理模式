**代理模式：**
给某一个对象（目标对象）提供一个代理，并由代理对象控制原对象（目标对象）的引用进行操作，这种模式一般称之为代理模式。

代理模式是结构型模式中的一种。既然要弄清楚代理模式，那么必须要先了解什么是结构性设计模式。
结构性设计模式存在的目的主要是：在解决了对象的创建问题之后，对象的组成以及对象之间的依赖关系就成了开发人员关注的焦点。因为如何设计对象的结构、继承和依赖关系会影响到后续程序的维护性、代码的健壮性、耦合性等等。
因此，结构性模式最主要涉及和关心的是如何组合类和对象来获得更大的结构。
**结构性模式采用继承机制来组合接口或实现（也称为：类结构性模式）**，或者通过组合一些对象从而实现新的功能（也称为对象结构性模式）。综上，结构性模式它不是对接口和实现进行组合，而是描述了如何对一些对象进行组合。

代理模式主要针对的是直接访问对象时可能会带来的问题，比如有些对象由于某些原因（例如对象创建开销很大，或者某些操作需要安全控制，或者需要进程外的访问），直接访问会给使用者或者系统结构带来很多麻烦，因此我们可以在访问此对象时，加上一个对此对象的访问中间层。其优点就在于拓展性极高（黄牛不仅可以卖火车票，它也可以推荐你买飞机票、买长途大巴票）、内部功能隐蔽；缺点就是因为增加了中间件，这样多余的一层可能会造成请求的处理速度相对变慢。

**示例说明：**

demoOne是代购mac；
demoTwo是代购火车票；






















